import { ContextMessageUpdate } from "telegraf";

import { BACK_ROUTES, MAIN_ROUTES, OI_ROUTES } from "../utils/CONST";
import asyncWrapper from "../utils/error-handler";
import getMainKeyboard from "../keyboards/main.keyboard";
import getOIKeyboard from "../keyboards/OI.keyboard";
import getPUMPKeyboard from "../keyboards/PUMP.keyboard";
import getREKTKeyboard from "../keyboards/REKT.keyboard";

export default function handlers(bot) {
  // OI screener
  bot.hears(
    MAIN_ROUTES.OI,
    asyncWrapper(async (ctx: ContextMessageUpdate) => {
      const { oiKeyboard } = getOIKeyboard();

      await ctx.replyWithHTML(
        "<b>ü§ñ –Ø —Å–∫–∞–Ω–∏—Ä—É—é —Ä—ã–Ω–æ–∫ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Ä–æ—Å—Ç–∞ Open Interest</b>",
        oiKeyboard
      );
    })
  );

  // PUMP screener
  bot.hears(
    MAIN_ROUTES.PUMP,
    asyncWrapper(async (ctx: ContextMessageUpdate) => {
      const { pumpKeyboard } = getPUMPKeyboard();

      await ctx.replyWithHTML(
        "<b>ü§ñ –Ø —Å–∫–∞–Ω–∏—Ä—É—é —Ä—ã–Ω–æ–∫ –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–∞–º–ø—ã, —á—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ –õ–û–ù–ì üìà –∏ –±–æ–ª—å—à–∏–µ –ø–∞–º–ø—ã, —á—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ –®–û–†–¢ üìâ</b>",
        pumpKeyboard
      );
    })
  );

  // REKT screener
  bot.hears(
    MAIN_ROUTES.REKT,
    asyncWrapper(async (ctx: ContextMessageUpdate) => {
      const { rektKeyboard } = getREKTKeyboard();

      await ctx.replyWithHTML(
        "<b>ü§ñ –Ø —Å–∫–∞–Ω–∏—Ä—É—é —Ä—ã–Ω–æ–∫ –Ω–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏</b>",
        rektKeyboard
      );
    })
  );

  // PUMP screener
  bot.hears(
    BACK_ROUTES.BACK,
    asyncWrapper(async (ctx: ContextMessageUpdate) => {
      const { mainKeyboard } = getMainKeyboard();

      await ctx.replyWithHTML("<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>", mainKeyboard);
    })
  );


   // üü¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—É—é –ø–∞—Ä—É
   bot.hears(
    MAIN_ROUTES.CREATE,
    asyncWrapper(async (ctx: ContextMessageUpdate) => await ctx.scene.enter('CreateNewTrackable'))
  );

   // üî¥ –£–¥–∞–ª–∏—Ç—å –ø–∞—Ä—É
   bot.hears(
    MAIN_ROUTES.DELETE,
    asyncWrapper(async (ctx: ContextMessageUpdate) => await ctx.scene.enter('DeleteTrackable'))
  );


   // üìà –ü–µ—Ä–∏–æ–¥ —Ä–æ—Å—Ç–∞ OI
   bot.hears(
    OI_ROUTES.UP_PERIOD,
    asyncWrapper(async (ctx: ContextMessageUpdate) => await ctx.scene.enter('SetOI'))
  );

   // üìâ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ—Å–∞–¥–∫–∏
   bot.hears(
    OI_ROUTES.DOWN_PERIOD,
    asyncWrapper(async (ctx: ContextMessageUpdate) => await ctx.scene.enter('SetOI'))
  );


   // üü© –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–æ—Å—Ç–∞
   bot.hears(
    OI_ROUTES.UP_PERCENTEGES,
    asyncWrapper(async (ctx: ContextMessageUpdate) => await ctx.scene.enter('SetOI'))
  );

  // üü• –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—Å–∞–¥–∫–∏
  bot.hears(
    OI_ROUTES.DOWN_PERCENTEGES,
    asyncWrapper(async (ctx: ContextMessageUpdate) => await ctx.scene.enter('SetOI'))
  );

}
