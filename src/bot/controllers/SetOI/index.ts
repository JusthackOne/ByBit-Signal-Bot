import { Composer, Scenes, ContextMessageUpdate, session } from "telegraf";
import { message } from "telegraf/filters";

import { MAIN_ROUTES, OI_ROUTES, SESSION_FIELDS } from "../../utils/CONST";
import { deleteFromSession, saveToSession } from "../../utils/session";
import Trackable from "../../models/Trackable";
import deleteMessages from "../../utils/deleteMessages";
import loggerWithCtx from "../../utils/logger";
import Config, { IConfig } from "../../models/Config";
import isNumeric from "../../utils/isNumeric";
import {
  isValidOIPercenteges,
  isValidOIPeriod
} from "../../utils/validateData";

const sendMessage = new Composer();
sendMessage.hears(OI_ROUTES.UP_PERIOD, async (ctx: ContextMessageUpdate) => {
  const configData: IConfig = (await Config.find().exec())[0];

  const msg = await ctx.replyWithHTML(
    `‚è± <b>–¢–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π OI –¥–æ–ª–∂–µ–Ω –≤—ã—Ä–∞—Å—Ç–∏ –Ω–∞ –Ω—É–∂–Ω—ã–π % - ${configData.oi_growth_period} –º–∏–Ω</b>\n\n –í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏: –æ—Ç 1 –¥–æ 30 –º–∏–Ω—É—Ç`
  );

  saveToSession(ctx, SESSION_FIELDS.CHANGE, OI_ROUTES.UP_PERIOD);
  await ctx.wizard.next();
});

sendMessage.hears(OI_ROUTES.DOWN_PERIOD, async (ctx: ContextMessageUpdate) => {
  const configData: IConfig = (await Config.find().exec())[0];

  const msg = await ctx.replyWithHTML(
    `‚è± <b>–¢–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π OI –¥–æ–ª–∂–µ–Ω —É–ø–∞—Å—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π % - ${configData.oi_recession_period} –º–∏–Ω</b>\n\n –í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏: –æ—Ç 1 –¥–æ 30 –º–∏–Ω—É—Ç`
  );

  saveToSession(ctx, SESSION_FIELDS.CHANGE, OI_ROUTES.DOWN_PERIOD);
  await ctx.wizard.next();
});

sendMessage.hears(
  OI_ROUTES.UP_PERCENTEGES,
  async (ctx: ContextMessageUpdate) => {
    const configData: IConfig = (await Config.find().exec())[0];

    const msg = await ctx.replyWithHTML(
      `üìà <b>–¢–µ–∫—É—â–∏–π % –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Ä–æ—Å—Ç) OI - ${configData.oi_growth_percentage}%</b>\n\n –í–≤–µ–¥–∏ –Ω–æ–≤—ã–π % –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã: –æ—Ç 0.1% –¥–æ 100%`
    );

    saveToSession(ctx, SESSION_FIELDS.CHANGE, OI_ROUTES.UP_PERCENTEGES);
    await ctx.wizard.next();
  }
);

sendMessage.hears(
  OI_ROUTES.DOWN_PERCENTEGES,
  async (ctx: ContextMessageUpdate) => {
    const configData: IConfig = (await Config.find().exec())[0];

    const msg = await ctx.replyWithHTML(
      `üìâ <b>–¢–µ–∫—É—â–∏–π % –∏–∑–º–µ–Ω–µ–Ω–∏—è (–ø–∞–¥–µ–Ω–∏–µ) OI - ${configData.oi_recession_percentage}%</b>\n\n –í–≤–µ–¥–∏ –Ω–æ–≤—ã–π % –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã: –æ—Ç 0.1% –¥–æ 100%`
    );

    saveToSession(ctx, SESSION_FIELDS.CHANGE, OI_ROUTES.DOWN_PERCENTEGES);
    await ctx.wizard.next();
  }
);

const changeOIParam = new Composer();
changeOIParam.on(
  message("text"),
  async (ctx: ContextMessageUpdate, next) => {
    const num: string = ctx.message.text;
    const configData: IConfig = (await Config.find().exec())[0];
    let res;

    if (!isNumeric(num)) {
      await ctx.replyWithHTML(`<b>–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!</b>`);

      return;
    }

    switch (ctx.session[SESSION_FIELDS.CHANGE]) {
      case OI_ROUTES.UP_PERIOD:
        if (!isValidOIPeriod(num)) {
          await ctx.replyWithHTML(
            `<b>–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ!</b>`
          );

          return;
        }

        res = await Config.updateOne(
          { _id: configData._id },
          { oi_growth_period: num }
        );
        await ctx.replyWithHTML(
          `<b>–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –ø–µ—Ä–∏–æ–¥ —Ä–æ—Å—Ç–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–µ–Ω - ${num} –º–∏–Ω</b>`
        );
        break;
      case OI_ROUTES.UP_PERCENTEGES:
        if (!isValidOIPercenteges(num)) {
          await ctx.replyWithHTML(
            `<b>–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ!</b>`
          );

          return;
        }

        res = await Config.updateOne(
          { _id: configData._id },
          { oi_growth_percentage: num }
        );
        await ctx.replyWithHTML(
          `<b>–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω % —Ä–æ—Å—Ç–∞ —Ü–µ–Ω—ã, —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–µ–Ω - ${num}%</b>`
        );
        break;
      case OI_ROUTES.DOWN_PERIOD:
        if (!isValidOIPeriod(num)) {
          await ctx.replyWithHTML(
            `<b>–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ!</b>`
          );

          return;
        }

        res = await Config.updateOne(
          { _id: configData._id },
          { oi_recession_period: num }
        );
        await ctx.replyWithHTML(
          `<b>–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –ø–µ—Ä–∏–æ–¥ —Å–ø–∞–¥–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–µ–Ω - ${num} –º–∏–Ω</b>`
        );
        break;

      case OI_ROUTES.DOWN_PERCENTEGES:
        if (!isValidOIPercenteges(num)) {
          await ctx.replyWithHTML(
            `<b>–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ!</b>`
          );

          return;
        }

        res = await Config.updateOne(
          { _id: configData._id },
          { oi_recession_percentage: num }
        );
        await ctx.replyWithHTML(
          `<b>–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω % –ø–∞–¥–µ–Ω–∏—è —Ü–µ–Ω—ã, —Ç–µ–ø–µ—Ä—å —Ä–∞–≤–µ–Ω - ${num}%</b>`
        );
        break;
    }

    return next();
  },

  async (ctx: ContextMessageUpdate) => {
    deleteMessages(ctx, ctx.session[SESSION_FIELDS.DELETE_MESSAGES]);
    deleteFromSession(ctx, SESSION_FIELDS.DELETE_MESSAGES);

    return await ctx.scene.leave();
  }
);

export const SetOI = new Scenes.WizardScene(
  "SetOI",
  sendMessage,
  changeOIParam
);
